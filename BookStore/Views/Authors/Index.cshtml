@using BookStore.ViewModels
@model List<AuthorVM>

@{
    Layout = "_Dashboard_Layout";
    ViewData["Title"] = "Authors";
}

@section subTitle {
    Authors
}


<div class="card w-100">
    <div class="card-header d-flex align-items-center justify-content-between">
        <h3 class="card-title">Show</h3>
        <a asp-controller="Authors" asp-action="Create" class="btn btn-primary">create</a>

    </div>

    <div class="card-body">
        <table class="table table-bordered">
            @if (!Model.Any())
            {
                <p>no data found</p>
            }
            else
            {
                <thead>
                    <tr>
                        <th style="width: 10px">#</th>
                        <th>Name</th>
                        <th style="width:250px">Action</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var itme in Model)
                    {
                        <tr>
                            <td>@itme.Id</td>
                            <td>@itme.Name</td>
                            <td>
                                <a class="btn btn-sm btn-primary" asp-controller="Authors" asp-action="Edit"
                                   asp-route-id="@itme.Id">
                                    <i class="fas fa-edit pe-2"></i>Edit
                                </a>
                                <a class="btn btn-sm btn-success" asp-controller="Authors" asp-action="Details"
                                   asp-route-id="@itme.Id">
                                    <i class="fas fa-info-circle"></i>Details
                                </a>
                                <a class="btn btn-sm btn-danger js-delete" data-id="@itme.Id" href="#">
                                    <i class="fas fa-trash"></i>Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>
</div>


@section Script {
    <Script>



        document.querySelectorAll(".js-delete").forEach((btn) => {
            btn.addEventListener("click", async () => {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        // const id = btn.getAttribute("data-id");
                        const id = btn.dataset.id;
                        const response = await fetch(`/Authors/Delete/${id}`, {
                            method: "DELETE"
                        });
                        if (response.ok) {
                            btn.closest("tr").remove();

                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 1500,
                                timerProgressBar: true,
                            })
                            Toast.fire({
                                icon: 'success',
                                title: 'Author deleted succesfuly',
                            })

                        }
                    }
                });
            })
        });


    </Script>
}


